@model PCRepairShop.ViewModels.CreateOrderVM

@{
    ViewBag.Title = "Create";
}

@{
    //TODO: Jquery datepicker
}
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>
<link href="https://ajax.aspnetcdn.com/ajax/jquery.ui/1.10.4/themes/mint-choc/jquery-ui.css" rel="stylesheet" />
<script type="text/javascript">
    $(document).ready(function () {
        DateTimePicker();
        $("#txtStartDate").change(function () {
            var date2 = $("#txtEndDate").datepicker('getDate', '+1d');
            console.log(date2);
            date2.setDate(date2.getDate() + 1);
            $("#txtEndDate").datepicker('option', 'minDate', date2);
            $("#txtToDate").datepicker('setDate', date2);
        });

        $("#btnSave").click(function () {
            alert($("#txtStartDate").val());
            alert($("#txtEndDate").val());
            var newvm = { StartDate: $("#txtStartDate").val(), EndDate: $("#txtEndDate").val() };
            $.ajax({
                async: true,
                type: 'POST',
                dataType: 'JSON',
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify(newvm),
                success: function () {
                    alert('da');
                },
                error: function () {

                }
            });
        });
    });

    function DateTimePicker() {
        $(".datepicker").datepicker({
            dateFormat: '0:dd/MMM/yyyy',
            changeMonth: true,
            changeYear: true,
            showOn: 'button',
            sideBySide: true,
            controlType: 'select',
            buttonText: '<span class="glyphicon glyphicon-calendar" ></span>',
            minDate: new Date()
        });
    }

</script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>RepairOrder</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.RepairOrder.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.RepairOrder.StartDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.TextBoxFor(m => m.RepairOrder.StartDate, "{0:yyyy-MM-dd}", new { @type = "date" })
            @Html.ValidationMessageFor(model => model.RepairOrder.StartDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RepairOrder.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.RepairOrder.EndDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.TextBoxFor(m => m.RepairOrder.EndDate, "{0:yyyy-MM-dd}", new { @type = "date" })
            @Html.ValidationMessageFor(model => model.RepairOrder.EndDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RepairOrder.Status, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.RepairOrder.Status, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.RepairOrder.Status, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RepairOrder.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.RepairOrder.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RepairOrder.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.customers, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(x => Model.RepairOrder.Customer.Id, new SelectList(Model.customers, "Id", "FirstName"), htmlAttributes: new { @class = "form-control", id = "Id" })
            @Html.ValidationMessageFor(model => model.RepairOrder.Customer, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RepairGuys, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(x => Model.RepairOrder.RepairGuy.Id, new SelectList(Model.RepairGuys, "Id", "FirstName"), htmlAttributes: new { @class = "form-control", id = "Id" })
            @Html.ValidationMessageFor(model => model.RepairOrder.RepairGuy, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
